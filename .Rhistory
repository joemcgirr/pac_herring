i <- 1
ld <- read.table(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/plink/pops/population_",pop_names[i],"_ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_indep_pairwise_100_10_0.8.ld",sep = ''), header = TRUE, stringsAsFactors = FALSE)
ld$distance <- ld$BP_B-ld$BP_A
plot(ld$distance, ld$R2, col = "white", xlim = c(0,1000), xlab = "distance (bp)" ,ylab = "R2")
smooth_ld <-smooth.spline(ld$distance, ld$R2, spar = .15)
lines(smooth_ld, lwd = 2,lty = pop_line[i], col = red)
for (i in c(2:length(pop_names))){
ld <- read.table(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/plink/pops/population_",pop_names[i],"_ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_indep_pairwise_100_10_0.8.ld",sep = ''), header = TRUE, stringsAsFactors = FALSE)
ld$distance <- ld$BP_B-ld$BP_A
#ld <- ld[ld$CHR_A == "1" & ld$CHR_B == "1" ,]
smooth_ld <-smooth.spline(ld$distance, ld$R2, spar = .15)
lines(smooth_ld, lwd = 2, col = pop_cols[i])
}
pop_names = c("PWS17", "TB17","SS17")
pop_line <- c(4,3,2,1)
pop <- "PWS91"
pop_cols <- c(red,blu,yel)
i <- 1
ld <- read.table(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/plink/pops/population_",pop_names[i],"_ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_indep_pairwise_100_10_0.8.ld",sep = ''), header = TRUE, stringsAsFactors = FALSE)
ld$distance <- ld$BP_B-ld$BP_A
plot(ld$distance, ld$R2, col = "white", xlim = c(0,1000), xlab = "distance (bp)" ,ylab = "R2")
smooth_ld <-smooth.spline(ld$distance, ld$R2, spar = .15)
lines(smooth_ld, lwd = 2, col = red)
for (i in c(2:length(pop_names))){
ld <- read.table(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/plink/pops/population_",pop_names[i],"_ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_indep_pairwise_100_10_0.8.ld",sep = ''), header = TRUE, stringsAsFactors = FALSE)
ld$distance <- ld$BP_B-ld$BP_A
#ld <- ld[ld$CHR_A == "1" & ld$CHR_B == "1" ,]
smooth_ld <-smooth.spline(ld$distance, ld$R2, spar = .15)
lines(smooth_ld, lwd = 2, col = pop_cols[i])
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(reticulate)
library(reshape2)
library(plyranges)
library(seqinr)
library(windowscanr)
library(ggpubr)
library(venn)
#BiocManager::install("seqinr")
# Get upper triangle of the correlation matrix
get_upper_tri <- function(cormat){
cormat[lower.tri(cormat)]<- NA
return(cormat)
}
get_lower_tri<-function(cormat){
cormat[upper.tri(cormat)] <- NA
return(cormat)
}
# color-blind friendly
# Wong, B. Points of view: Color blindness. Nat Methods (2011).
bla <- "#000000"
blu <- "#0072b2"
grb <- "#56b4e9"
lir <- "#cc79a7"
gre <- "#009e73"
red <- "#d55e00"
org <- "#e69f00"
yel <- "#f0e442"
gry<-  '#BBBBBB'
win <- "1mb"
step <- "100kb"
freqs_win_p <- read.table(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/freqs/window/PWS_shifts_",win,"_win_",step,"_step.txt",sep = ""))
freqs_win_t <- read.table(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/freqs/window/TB_shifts_",win,"_win_",step,"_step.txt",sep = ""))
freqs_win_s <- read.table(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/freqs/window/SS_shifts_",win,"_win_",step,"_step.txt",sep = ""))
all_pops <- data.frame(chr = freqs_win_p$chr,
win_mid = freqs_win_p$win_mid,
zt01_p = freqs_win_p$zt01_mean,
zt02_p = freqs_win_p$zt02_mean,
zt03_p = freqs_win_p$zt03_mean,
zt12_p = freqs_win_p$zt12_mean,
zt13_p = freqs_win_p$zt13_mean,
zt23_p = freqs_win_p$zt23_mean,
zt01_t = freqs_win_t$zt01_mean,
zt02_t = freqs_win_t$zt02_mean,
zt03_t = freqs_win_t$zt03_mean,
zt12_t = freqs_win_t$zt12_mean,
zt13_t = freqs_win_t$zt13_mean,
zt23_t = freqs_win_t$zt23_mean,
zt12_s = freqs_win_s$zt12_mean,
zt13_s = freqs_win_s$zt13_mean,
zt23_s = freqs_win_s$zt23_mean)
all_pops$chr_num <- factor(all_pops$chr, levels = c(1:26))
zp <- data.frame(z91_96 = all_pops$zt01_p,pop = "PWS")
zt <- data.frame(z91_96 = all_pops$zt01_t,pop = "TB")
z <- rbind(zp,zt)
p<-ggplot(z, aes(x=z91_96, fill=pop)) +
geom_density(alpha=0.4)+
scale_fill_manual(name = "Population",values=c(red,blu))+
ylab("density\n") + xlab(expression(paste(Delta, "z 1991-1996")))+
theme_minimal()
p
zp <- data.frame(z96_07 = all_pops$zt12_p,pop = "PWS")
zt <- data.frame(z96_07 = all_pops$zt12_t,pop = "TB")
zs <- data.frame(z96_07 = all_pops$zt12_s,pop = "SS")
z <- rbind(zp,zt,zs)
p<-ggplot(z, aes(x=z96_07, fill=pop)) +
geom_density(alpha=0.4)+
scale_fill_manual(name = "Population",values=c(red,yel,blu))+
ylab("density\n") + xlab(expression(paste(Delta, "z 2007-2017")))+
theme_minimal()
p
zp <- data.frame(z07_17 = all_pops$zt23_p,pop = "PWS")
zt <- data.frame(z07_17 = all_pops$zt23_t,pop = "TB")
zs <- data.frame(z07_17 = all_pops$zt23_s,pop = "SS")
z <- rbind(zp,zt,zs)
p<-ggplot(z, aes(x=z07_17, fill=pop)) +
geom_density(alpha=0.4)+
scale_fill_manual(name = "Population",values=c(red,yel,blu))+
ylab("density\n") + xlab(expression(paste(Delta, "z 2007-2017")))+
theme_minimal()
p
library(vcfR)
BiocManager::install("vcfR")
library(vcfR)
remotes::install_github("JimWhiting91/genotype_plot")
#BiocManager::install("vcfR")
#remotes::install_github("JimWhiting91/genotype_plot")
library(GenotypePlot)
#BiocManager::install("vcfR")
remotes::install_github("JimWhiting91/genotype_plot")
BiocManager::install("ape")
#BiocManager::install("ape")
remotes::install_github("JimWhiting91/genotype_plot")
install.packages('htmltools')
#BiocManager::install("ape")
remotes::install_github("JimWhiting91/genotype_plot")
library(GenotypePlot)
#BiocManager::install("ape")
remotes::install_github("JimWhiting91/genotype_plot")
#BiocManager::install("ape")
remotes::install_github("JimWhiting91/genotype_plot")
library(rlang)
#BiocManager::install("ape")
remotes::install_github("JimWhiting91/genotype_plot")
install.packages('rlang')
install.packages("rlang")
#BiocManager::install("ape")
remotes::install_github("JimWhiting91/genotype_plot")
library(GenotypePlot)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(vcfR)
#BiocManager::install("ape")
#remotes::install_github("JimWhiting91/genotype_plot")
library(GenotypePlot)
# color-blind friendly
# Wong, B. Points of view: Color blindness. Nat Methods (2011).
bla <- "#000000"
blu <- "#0072b2"
grb <- "#56b4e9"
lir <- "#cc79a7"
gre <- "#009e73"
red <- "#d55e00"
org <- "#e69f00"
yel <- "#f0e442"
gry<-  '#BBBBBB'
my_vcf <- read.vcfR("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_chr12.vcf.gz")
meta <- read.table('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt')
meta <- read.table('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#)
meta <- read.table('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#')
meta <- read.table('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#')
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#')
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
head(meta)
my_popmap <- meta[c("sample","Population_Year")]
my_popmap <- meta[c("sample","Population_Year"),]
my_popmap
my_popmap <- meta[,c("sample","Population_Year")]
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
my_popmap
nrow(my_popmap)
new_plot <- genotype_plot(vcf_object  =  my_vcf,
popmap = my_popmap,
cluster        = FALSE,
snp_label_size = 10000,
colour_scheme=c("#d4b9da","#e7298a","#980043"))
new_plot
pdf("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/test_plot.pdf",width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
my_vcf <- read.vcfR("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_chr12.vcf.gz")
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
new_plot <- genotype_plot(vcf_object  =  my_vcf,
chr    = 12,                                      # chr or scaffold ID
start  = 11700000,                                # start of region
end    = 11800000,                                # end = end of region
popmap = my_popmap,                              # population membership
cluster        = TRUE,                           # whether to organise haplotypes by PCA clustering
snp_label_size = 10000,                           # breaks for position labels, eg. plot a position every 100,000 bp
colour_scheme=c("#FCD225","#C92D59","#300060"),   # character vector of colour values
invariant_filter = TRUE)                          # Filter any invariant sites before plotting
pdf("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/test_plot.pdf",width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
my_popmap <- head(my_popmap,100)
new_plot <- genotype_plot(vcf_object  =  my_vcf,
#chr    = 12,                                      # chr or scaffold ID
#start  = 11700000,                                # start of region
#end    = 11800000,                                # end = end of region
popmap = my_popmap,                              # population membership
cluster        = TRUE,                           # whether to organise haplotypes by PCA clustering
snp_label_size = 10000,                           # breaks for position labels, eg. plot a position every 100,000 bp
colour_scheme=c("#FCD225","#C92D59","#300060"),   # character vector of colour values
invariant_filter = TRUE)                          # Filter any invariant sites before plotting
pdf("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/test_plot.pdf",width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
new_plot <- genotype_plot(vcf_object  =  my_vcf,
#chr    = 12,                                      # chr or scaffold ID
#start  = 11700000,                                # start of region
#end    = 11800000,                                # end = end of region
popmap = my_popmap,                              # population membership
cluster        = TRUE,                           # whether to organise haplotypes by PCA clustering
snp_label_size = 100,                           # breaks for position labels, eg. plot a position every 100,000 bp
colour_scheme=c("#FCD225","#C92D59","#300060"),   # character vector of colour values
invariant_filter = TRUE)                          # Filter any invariant sites before plotting
pdf("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/test_plot.pdf",width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
new_plot <- genotype_plot(vcf_object  =  my_vcf,
#chr    = 12,                                      # chr or scaffold ID
#start  = 11700000,                                # start of region
#end    = 11800000,                                # end = end of region
popmap = my_popmap,                              # population membership
cluster        = TRUE,                           # whether to organise haplotypes by PCA clustering
snp_label_size = 1000000,                           # breaks for position labels, eg. plot a position every 100,000 bp
colour_scheme=c(red,blu,yel),   # character vector of colour values
invariant_filter = TRUE)                          # Filter any invariant sites before plotting
pdf("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/test_plot.pdf",width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
# plot subset of chromosome
new_plot <- genotype_plot(vcf_object  =  my_vcf,
#chr    = 12,                                      # chr or scaffold ID
#start  = 11700000,                                # start of region
#end    = 11800000,                                # end = end of region
popmap = my_popmap,                              # population membership
cluster        = TRUE,                           # whether to organise haplotypes by PCA clustering
snp_label_size = 1000000,                           # breaks for position labels, eg. plot a position every 100,000 bp
colour_scheme=c(yel,org,red),   # character vector of colour values
invariant_filter = TRUE)                          # Filter any invariant sites before plotting
dendro_with_tips <- new_plot$dendrogram +
geom_text(aes(x=1:length(new_plot$dendro_labels),
y=-2.5,
label=new_plot$dendro_labels))
dendro_with_tips
my_popmap <- meta[c("Sample","Population_Year")]
#my_popmap <- head(my_popmap,100)
my_popmap <- my_popmap[grep("PWS"| "TB", my_popmap$Population_Year),]
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
#my_popmap <- head(my_popmap,100)
pops <- c("PWS17","CA17")
my_popmap <-  my_popmap[my_popmap$Population_Year %in% pops]
my_popmap$Population_Year
my_popmap <-  my_popmap[my_popmap$Population_Year %in% pops,]
my_popmap
new_plot <- genotype_plot(vcf_object  =  my_vcf,
#chr    = 12,                                      # chr or scaffold ID
#start  = 11700000,                                # start of region
#end    = 11800000,                                # end = end of region
popmap = my_popmap,                              # population membership
cluster        = TRUE,                           # whether to organise haplotypes by PCA clustering
snp_label_size = 1000000,                           # breaks for position labels, eg. plot a position every 100,000 bp
colour_scheme=c(yel,org,red),   # character vector of colour values
invariant_filter = TRUE)                          # Filter any invariant sites before plotting
dendro_with_tips <- new_plot$dendrogram +
geom_text(aes(x=1:length(new_plot$dendro_labels),
y=-2.5,
label=new_plot$dendro_labels))
pdf("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/test_plot.pdf",width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
dendro_with_tips
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
#my_popmap <- head(my_popmap,100)
pops <- c("PWS17","CA17")
my_popmap <-  my_popmap[my_popmap$Population_Year %in% pops,]
my_popmap <-  sample_n(my_popmap[my_popmap$Population_Year %in% pops,],50)
new_plot <- genotype_plot(vcf_object  =  my_vcf,
#chr    = 12,                                      # chr or scaffold ID
#start  = 11700000,                                # start of region
#end    = 11800000,                                # end = end of region
popmap = my_popmap,                              # population membership
cluster        = TRUE,                           # whether to organise haplotypes by PCA clustering
snp_label_size = 5000000,                           # breaks for position labels, eg. plot a position every 100,000 bp
colour_scheme=c(yel,org,red),   # character vector of colour values
invariant_filter = TRUE)                          # Filter any invariant sites before plotting
dendro_with_tips <- new_plot$dendrogram +
geom_text(aes(x=1:length(new_plot$dendro_labels),
y=-2.5,
label=new_plot$dendro_labels))
dendro_with_tips
pdf("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/test_plot.pdf",width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
my_vcf <- read.vcfR("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_chr7.vcf.gz")
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
#my_popmap <- head(my_popmap,100)
pops <- c("PWS17","CA17")
my_popmap <-  my_popmap[my_popmap$Population_Year %in% pops,]
my_popmap <-  sample_n(my_popmap[my_popmap$Population_Year %in% pops,],50)
# plot entire chromosome
# new_plot <- genotype_plot(vcf_object  =  my_vcf,
#                           popmap = my_popmap,
#                           cluster        = FALSE,
#                           snp_label_size = 5000000,
#                           colour_scheme=c("#d4b9da","#e7298a","#980043"))
#
# plot subset of chromosome
new_plot <- genotype_plot(vcf_object  =  my_vcf,
#chr    = 12,                                      # chr or scaffold ID
#start  = 11700000,                                # start of region
#end    = 11800000,                                # end = end of region
popmap = my_popmap,                              # population membership
cluster        = TRUE,                           # whether to organise haplotypes by PCA clustering
snp_label_size = 5000000,                           # breaks for position labels, eg. plot a position every 100,000 bp
colour_scheme=c(yel,org,red),   # character vector of colour values
invariant_filter = TRUE)                          # Filter any invariant sites before plotting
dendro_with_tips <- new_plot$dendrogram +
geom_text(aes(x=1:length(new_plot$dendro_labels),
y=-2.5,
label=new_plot$dendro_labels))
dendro_with_tips
pdf("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/test_plot.pdf",width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
for (chr in c("chr7", "chr12")){
my_vcf <- read.vcfR(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_",chr,".vcf.gz", sep = ""))
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
# plot entire chromosome
new_plot <- genotype_plot(vcf_object  =  my_vcf,
popmap = my_popmap,
cluster        = FALSE,
snp_label_size = 5000000,
colour_scheme=c(yel,org,red))
pdf(paste("C:/Users/jmcgirr/Documents/GitHub/pac_herring/Rmarkdown/inversions/",chr,".pdf",sep = ""),width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
}
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(vcfR)
#BiocManager::install("ape")
#remotes::install_github("JimWhiting91/genotype_plot")
library(GenotypePlot)
# color-blind friendly
# Wong, B. Points of view: Color blindness. Nat Methods (2011).
bla <- "#000000"
blu <- "#0072b2"
grb <- "#56b4e9"
lir <- "#cc79a7"
gre <- "#009e73"
red <- "#d55e00"
org <- "#e69f00"
yel <- "#f0e442"
gry<-  '#BBBBBB'
for (chr in c("chr7", "chr12")){
my_vcf <- read.vcfR(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_",chr,".vcf.gz", sep = ""))
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
# plot entire chromosome
new_plot <- genotype_plot(vcf_object  =  my_vcf,
popmap = my_popmap,
cluster        = FALSE,
snp_label_size = 5000000,
colour_scheme=c(yel,org,red))
pdf(paste("C:/Users/jmcgirr/Documents/GitHub/pac_herring/Rmarkdown/inversions/",chr,".pdf",sep = ""),width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
}
new_plot <- genotype_plot(vcf_object  =  my_vcf,
popmap = my_popmap,
cluster        = FALSE,
snp_label_size = 5000000,
colour_scheme=c(yel,org,red))
pdf(paste("C:/Users/jmcgirr/Documents/GitHub/pac_herring/Rmarkdown/inversions/",chr,".pdf",sep = ""),width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
chr <- "chr7"
my_vcf <- read.vcfR(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_",chr,".vcf.gz", sep = ""))
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
# plot entire chromosome
new_plot <- genotype_plot(vcf_object  =  my_vcf,
popmap = my_popmap,
cluster        = FALSE,
snp_label_size = 5000000,
colour_scheme=c(yel,org,red))
pdf(paste("C:/Users/jmcgirr/Documents/GitHub/pac_herring/Rmarkdown/inversions/",chr,".pdf",sep = ""),width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
chr <- "chr12"
my_vcf <- read.vcfR(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_",chr,".vcf.gz", sep = ""))
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
#my_popmap <- head(my_popmap,100)
pops <- c("PWS17","CA17")
my_popmap <-  my_popmap[my_popmap$Population_Year %in% pops,]
my_popmap <-  sample_n(my_popmap[my_popmap$Population_Year %in% pops,],50)
# plot subset of chromosome
new_plot <- genotype_plot(vcf_object  =  my_vcf,
#chr    = 12,
#start  = 11700000,
#end    = 11800000,
popmap = my_popmap,
#cluster        = TRUE,
snp_label_size = 5000000,
colour_scheme=c(yel,org,red),
plot_allele_frequency=TRUE,
invariant_filter = TRUE)
#dendro_with_tips <- new_plot$dendrogram +
#                    geom_text(aes(x=1:length(new_plot$dendro_labels),y=-2.5,label=new_plot$dendro_labels))
#dendro_with_tips
pdf("C:/Users/jmcgirr/Documents/GitHub/pac_herring/Rmarkdown/inversions/test_plot.pdf",width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
# plot subset of chromosome
new_plot <- genotype_plot(vcf_object  =  my_vcf,
#chr    = 12,
#start  = 11700000,
#end    = 11800000,
popmap = my_popmap,
#cluster        = TRUE,
snp_label_size = 5000000,
colour_scheme=c(yel,org,red),
plot_allele_frequency=TRUE,
invariant_filter = TRUE)
pdf("C:/Users/jmcgirr/Documents/GitHub/pac_herring/Rmarkdown/inversions/test_plot.pdf",width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
chr <- "chr7"
my_vcf <- read.vcfR(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_",chr,".vcf.gz", sep = ""))
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
# plot variation for individuals grouped by population
new_plot <- genotype_plot(vcf_object  =  my_vcf,
popmap = my_popmap,
cluster        = FALSE,
snp_label_size = 5000000,
colour_scheme=c(yel,org,red))
pdf(paste("C:/Users/jmcgirr/Documents/GitHub/pac_herring/Rmarkdown/inversions/",chr,"_snps.pdf",sep = ""),width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
# plot allele frequencies for populations
new_plot <- genotype_plot(vcf_object  =  my_vcf,
popmap = my_popmap,
snp_label_size = 5000000,
colour_scheme=c(yel,org,red),
plot_allele_frequency=TRUE,
invariant_filter = TRUE)
pdf(paste("C:/Users/jmcgirr/Documents/GitHub/pac_herring/Rmarkdown/inversions/",chr,"_AF.pdf",sep = ""),width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
chr <- "chr12"
my_vcf <- read.vcfR(paste("C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/chrs/ph_filtered_snps_minDP600_maxDP2000_minQ20_minMQ30_NS0.5_maf0.05_",chr,".vcf.gz", sep = ""))
meta <- read.csv('C:/Users/jmcgirr/Documents/Whitehead_Lab/ph/vcfs/sample_metadata.txt', comment.char = '#', sep = "\t")
my_popmap <- meta[c("Sample","Population_Year")]
# plot variation for individuals grouped by population
new_plot <- genotype_plot(vcf_object  =  my_vcf,
popmap = my_popmap,
cluster        = FALSE,
snp_label_size = 5000000,
colour_scheme=c(yel,org,red))
pdf(paste("C:/Users/jmcgirr/Documents/GitHub/pac_herring/Rmarkdown/inversions/",chr,"_snps.pdf",sep = ""),width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
# plot allele frequencies for populations
new_plot <- genotype_plot(vcf_object  =  my_vcf,
popmap = my_popmap,
snp_label_size = 5000000,
colour_scheme=c(yel,org,red),
plot_allele_frequency=TRUE,
invariant_filter = TRUE)
pdf(paste("C:/Users/jmcgirr/Documents/GitHub/pac_herring/Rmarkdown/inversions/",chr,"_AF.pdf",sep = ""),width=10,height=8)
combine_genotype_plot(new_plot)
dev.off()
library(knitr)
my.jekyll.site <- ""
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/jmcgirr/Documents/GitHub/pac_herring/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/pac_herring/README.Rmd")
library(knitr)
my.jekyll.site <- ""
KnitPost <- function(input, base.url = my.jekyll.site) {
opts_knit$set(base.url = base.url)
fig.path <- paste0("images/", sub(".Rmd$", "", basename(input)), "/")
opts_chunk$set(fig.path = fig.path)
opts_chunk$set(fig.cap = "center")
render_jekyll()
knit(input, envir = parent.frame())
}
setwd("C:/Users/jmcgirr/Documents/GitHub/pac_herring/")
KnitPost("C:/Users/jmcgirr/Documents/GitHub/pac_herring/README.Rmd")
